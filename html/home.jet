<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Home</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .chatbox {
            outline: 1px solid silver;
            min-height: 500px;
            padding: 0.5em;
            scroll-behavior: auto;
            wrap-option: auto;
            scrollbar-3dlight-color: #1e2125;
        }
    </style>
</head>
<body>

<!-- Main Page Design -->
<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="mt-3">{{botname}} Demo</h1>
            <hr>
        </div>
    </div>
    <!-- Logged In -->
    <div class="row">
        <div class="col-md-2">
            <h3>Online Users</h3>
            <hr>
            <ul id="online_users">
            </ul>
        </div>

        <div class="d-flex flex-column align-items-stretch flex-shrink-0 bg-white" style="width: 800px;">
            <a href="/" class="d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom">
              <svg class="bi pe-none me-2" width="30" height="24"><use xlink:href="#bootstrap"/></svg>
              <span class="fs-5 fw-semibold">Chat</span>
            </a>
            <div id="output" class="chatbox">
            <!-- Start
                <div class="list-group list-group-flush border-bottom scrollarea">
                      <div class="d-flex w-100 ">
                        <strong class="mb-1">3:45PM -- Rich:</strong>&nbsp;This is a test
                      </div>
                  </div>
            -->
            </div>
            <div class="form-group">
                <label for="username">Username:</label>
                <input type="text" name="username" id="username" class="form-control" autocomplete="off">
            </div>
            <div class="form-group">
                <label for="message">Message:</label>
                <input type="text" name="message" id="message" class="form-control" autocomplete="off">
            </div>
            <!-- Button -->
            <a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBtn">Send Message</a>
            <input type="hidden" name="action" id="action">

        </div>
        </div>
    </div>
</div>

</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js"></script>
<!--
<script src="file:///js/boostrap.js">
        integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
        crossorigin="anonymous"></script>
-->

<script>
    let socket = null;
    let o = document.getElementById("output");
    let userField = document.getElementById("username");
    let messageField = document.getElementById("message");

    window.onbeforeunload = function () {
        console.log("Leaving");
        let jsonData = {};
        jsonData["action"] = "left";
        socket.send(JSON.stringify(jsonData))
    }

    document.addEventListener("DOMContentLoaded", function () {
        socket = new WebSocket("ws://{{host}}/ws");

        socket.onopen = () => {
            let jsonData = {};
            jsonData["action"] = "listusers";
            socket.send(JSON.stringify(jsonData));
            console.log("Successfully connected");
        }

        socket.onclose = () => {
            console.log("connection closed");
        }

        socket.onerror = error => {
            console.log("there was an error");
        }

        socket.onmessage = msg => {
            let data = JSON.parse(msg.data);
            console.log("Action is", data.action);

            switch (data.action) {
                case "list_users":
                    let ul = document.getElementById("online_users");
                    while (ul.firstChild) ul.removeChild(ul.firstChild);

                    if (data.connected_users.length > 0) {
                        data.connected_users.forEach(function (item) {
                            let li = document.createElement("li");
                            li.appendChild(document.createTextNode(item));
                            ul.appendChild(li);
                        })
                    }
                    break;

                case "broadcast":
                    o.innerHTML = o.innerHTML + data.message + "<br>";
                    break;
            }

        }


        let userInput = document.getElementById("username");
        userInput.addEventListener("change", function () {
            let jsonData = {};
            jsonData["action"] = "username";
            jsonData["username"] = this.value;
            socket.send(JSON.stringify(jsonData));
        })

        document.getElementById("message").addEventListener("keydown", function (event) {
            if (event.code === "Enter") {
                if (!socket) {
                    console.log("no connection");
                    return false
                }
                event.preventDefault();
                event.stopPropagation();
                sendMessage();
            }
        })


        document.getElementById("sendBtn").addEventListener("click", function() {
            if ((userField.value === "") || (messageField.value === "")) {
                alert ("fill out user and message");
                return false;
            } else {
                sendMessage()
            }
        })
    })

    function sendMessage() {
        let jsonData = {};
        jsonData["action"] = "broadcast";
        jsonData["username"] = document.getElementById("username").value;
        jsonData["message"] = document.getElementById("message").value;
        if ((jsonData["username"]==="") || (jsonData["message"] === "")) {
            return false;
        }
        socket.send(JSON.stringify(jsonData))
        document.getElementById("message").value = "";
    }
</script>
</html>